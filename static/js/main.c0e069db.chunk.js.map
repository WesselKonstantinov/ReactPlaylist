{"version":3,"sources":["components/Header.js","components/SongForm.js","components/SongFilter.js","components/Song.js","components/SongTable.js","components/SongOverview.js","App.js","index.js"],"names":["Header","className","SongForm","props","handleInputChange","e","target","name","value","setInputValues","inputValues","artist","genre","rating","onSubmit","preventDefault","addSong","type","placeholder","onChange","min","max","SongFilter","handleFilterChange","setFilteredValues","filteredValues","htmlFor","id","Song","onClick","deleteSong","SongTable","songs","filter","song","map","SongOverview","useState","setSongs","newSong","Date","valueOf","remainingSongs","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0e069db.chunk.js","sourcesContent":["function Header() {\n    return (\n        <header className=\"app__header\">\n            <h1>React Lil' Playlist</h1>\n        </header>\n    );\n}\n\nexport default Header;","function SongForm(props) {\n    function handleInputChange(e) {\n        const { name, value } = e.target;\n        props.setInputValues({\n            ...props.inputValues,\n            [name]: value,\n        });\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.addSong(props.inputValues);\n        props.setInputValues({\n            name: '',\n            artist: '',\n            genre: '',\n            rating: '',\n        });\n    }\n\n    const { name, artist, genre, rating } = props.inputValues;\n    return (\n        <form onSubmit={handleSubmit} className=\"song-form\">\n            <input\n                className=\"song-form__input\"\n                type=\"text\"\n                name=\"name\"\n                value={name || ''}\n                placeholder=\"Song\"\n                onChange={handleInputChange}\n            />\n            <input\n                className=\"song-form__input\"\n                type=\"text\"\n                name=\"artist\"\n                value={artist || ''}\n                placeholder=\"Artist\"\n                onChange={handleInputChange}\n            />\n            <select\n                className=\"song-form__select\"\n                name=\"genre\"\n                value={genre || ''}\n                onChange={handleInputChange}\n            >\n                <option value=\"\">-- Choose a genre --</option>\n                <option value=\"Blues\">Blues</option>\n                <option value=\"Classical\">Classical</option>\n                <option value=\"Country\">Country</option>\n                <option value=\"Disco\">Disco</option>\n                <option value=\"Dubstep\">Dubstep</option>\n                <option value=\"Eurodance\">Eurodance</option>\n                <option value=\"Hip Hop\">Hip Hop</option>\n                <option value=\"House\">House</option>\n                <option value=\"Jazz\">Jazz</option>\n                <option value=\"Latin\">Latin</option>\n                <option value=\"Metal\">Metal</option>\n                <option value=\"Pop\">Pop</option>\n                <option value=\"Rap\">Rap</option>\n                <option value=\"Reggae\">Reggae</option>\n                <option value=\"Rhythm and Blues\">Rhythm and Blues</option>\n                <option value=\"Rock\">Rock</option>\n                <option value=\"Soul\">Soul</option>\n                <option value=\"Techno\">Techno</option>\n                <option value=\"Trance\">Trance</option>\n            </select>\n            <input\n                className=\"song-form__input\"\n                type=\"number\"\n                name=\"rating\"\n                value={rating || ''}\n                min=\"1\"\n                max=\"5\"\n                placeholder=\"Rating (1-5)\"\n                onChange={handleInputChange}\n            />\n            <button type=\"submit\" className=\"song-form__submit\">Add song</button>\n        </form>\n    );\n}\n\nexport default SongForm;","function SongFilter(props) {\n    function handleFilterChange(e) {\n        const { name, value } = e.target;\n        props.setFilteredValues({\n            ...props.filteredValues,\n            [name]: value,\n        });\n    }\n\n    return (\n        <form className=\"song-filter\">\n            <div className=\"song-filter__row\">\n                <label className=\"song-filter__label\" htmlFor=\"genre-select\">Filter by:</label>\n                <select\n                    className=\"song-filter__select\"\n                    name=\"genre\"\n                    id=\"genre-select\"\n                    onChange={handleFilterChange}\n                >\n                    <option value=\"\">{(props.filteredValues.genre) ? 'Reset filter' : '-- Genre --'}</option>\n                    <option value=\"Blues\">Blues</option>\n                    <option value=\"Classical\">Classical</option>\n                    <option value=\"Country\">Country</option>\n                    <option value=\"Disco\">Disco</option>\n                    <option value=\"Dubstep\">Dubstep</option>\n                    <option value=\"Eurodance\">Eurodance</option>\n                    <option value=\"Hip Hop\">Hip Hop</option>\n                    <option value=\"House\">House</option>\n                    <option value=\"Jazz\">Jazz</option>\n                    <option value=\"Latin\">Latin</option>\n                    <option value=\"Metal\">Metal</option>\n                    <option value=\"Pop\">Pop</option>\n                    <option value=\"Rap\">Rap</option>\n                    <option value=\"Reggae\">Reggae</option>\n                    <option value=\"Rhythm and Blues\">Rhythm and Blues</option>\n                    <option value=\"Rock\">Rock</option>\n                    <option value=\"Soul\">Soul</option>\n                    <option value=\"Techno\">Techno</option>\n                    <option value=\"Trance\">Trance</option>\n                </select>\n            </div>\n            <div className=\"song-filter__row\">\n                <label className=\"song-filter__label\" htmlFor=\"rating-select\">Filter by:</label>\n                <select\n                    className=\"song-filter__select\"\n                    name=\"rating\"\n                    id=\"rating-select\"\n                    onChange={handleFilterChange}\n                >\n                    <option value=\"\">{(props.filteredValues.rating) ? 'Reset filter' : '-- Rating --'}</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                </select>\n            </div>\n        </form>\n    );\n}\n\nexport default SongFilter;","function Song(props) {\n    const { name, artist, genre, rating, id } = props;\n\n    function handleClick() {\n        props.deleteSong(id);\n    }\n\n    return (\n        <tr className=\"song-table__row\">\n            <td className=\"song-table__data\">\n                {name}\n            </td>\n            <td className=\"song-table__data\">\n                {artist}\n            </td>\n            <td className=\"song-table__data\">\n                {genre}\n            </td>\n            <td className=\"song-table__data\">\n                {rating}\n            </td>\n            <td className=\"song-table__data\">\n                <button onClick={handleClick} className=\"song-table__delete-button\">Delete</button>\n            </td>\n        </tr>\n    );\n}\n\nexport default Song;","import Song from './Song';\n\nfunction SongTable(props) {\n    let songs;\n    if (props.filteredValues.genre && !props.filteredValues.rating) {\n        songs = props.songs.filter(song => song.genre === props.filteredValues.genre);\n    } else if (props.filteredValues.rating && !props.filteredValues.genre) {\n        songs = props.songs.filter(song => song.rating === props.filteredValues.rating);\n    } else if (props.filteredValues.genre && props.filteredValues.rating) {\n        songs = props.songs.filter(song => (song.genre === props.filteredValues.genre) && (song.rating === props.filteredValues.rating));\n    } else {\n        songs = props.songs;\n    }\n\n    return (\n        <table className=\"song-table\">\n            <thead>\n                <tr className=\"song-table__row\">\n                    <th className=\"song-table__header\">Song</th>\n                    <th className=\"song-table__header\">Artist</th>\n                    <th className=\"song-table__header\">Genre</th>\n                    <th className=\"song-table__header\">Rating</th>\n                    <th className=\"song-table__header\">Action</th>\n                </tr>\n            </thead>\n            <tbody>\n                {songs.map(song => (\n                    <Song\n                        key={song.id}\n                        name={song.name}\n                        artist={song.artist}\n                        genre={song.genre}\n                        rating={song.rating}\n                        id={song.id}\n                        deleteSong={props.deleteSong}\n                    />\n                ))}\n            </tbody>\n        </table>\n    );\n}\n\nexport default SongTable;","import { useState } from 'react';\nimport SongForm from './SongForm';\nimport SongFilter from './SongFilter';\nimport SongTable from './SongTable';\n\nfunction SongOverview() {\n    const [songs, setSongs] = useState([]);\n    const [inputValues, setInputValues] = useState({\n        name: '',\n        artist: '',\n        genre: '',\n        rating: '',\n    });\n    const [filteredValues, setFilteredValues] = useState({\n        genre: '',\n        rating: '',\n    });\n\n    function addSong(inputValues) {\n        const { name, artist, genre, rating } = inputValues;\n        const newSong = {\n            id: new Date().valueOf(), // value based on milliseconds ensures we get a unique id\n            name,\n            artist,\n            genre,\n            rating,\n        };\n        setSongs([...songs, newSong]);\n    }\n\n    function deleteSong(id) {\n        const remainingSongs = songs.filter(song => id !== song.id);\n        setSongs(remainingSongs);\n    }\n\n    return (\n        <main className=\"app__main-section\">\n            <SongForm\n                inputValues={inputValues}\n                setInputValues={setInputValues}\n                addSong={addSong}\n            />\n            <SongFilter\n                filteredValues={filteredValues}\n                setFilteredValues={setFilteredValues}\n            />\n            <SongTable\n                songs={songs}\n                deleteSong={deleteSong}\n                filteredValues={filteredValues}\n            />\n        </main>\n    );\n}\n\nexport default SongOverview;","import Header from './components/Header';\nimport SongOverview from './components/SongOverview';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <SongOverview />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/style.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}